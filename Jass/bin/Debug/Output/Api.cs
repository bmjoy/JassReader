using System;
using System.Collections.Generic;

namespace Jass {
	
	/* native functions */
	public class Api {

		private void DebugS(string str);
		private void DebugFI(string str, int val);
		private void DebugUnitID(string str, int val);
		private void DisplayText(int p, string str);
		private void DisplayTextI(int p, string str, int val);
		private void DisplayTextII(int p, string str, int v1, int v2);
		private void DisplayTextIII(int p, string str, int v1, int v2, int v3);
		private bool DoAiScriptDebug(nothin g);
		private int GetAiPlayer(nothin g);
		private int GetHeroId(nothin g);
		private int GetHeroLevelAI(nothin g);
		private int GetUnitCount(int unitid);
		private int GetPlayerUnitTypeCount(player p, int unitid);
		private int GetUnitCountDone(int unitid);
		private int GetTownUnitCount(int id, int tn, bool dn);
		private int GetUnitGoldCost(int unitid);
		private int GetUnitWoodCost(int unitid);
		private int GetUnitBuildTime(int unitid);
		private int GetMinesOwned(nothin g);
		private int GetGoldOwned(nothin g);
		private int TownWithMine(nothin g);
		private bool TownHasMine(int townid);
		private bool TownHasHall(int townid);
		private int GetUpgradeLevel(int id);
		private int GetUpgradeGoldCost(int id);
		private int GetUpgradeWoodCost(int id);
		private int GetNextExpansion(nothin g);
		private unit GetMegaTarget(nothin g);
		private unit GetBuilding(player p);
		private int GetEnemyPower(nothin g);
		private void SetAllianceTarget(unit id);
		private unit GetAllianceTarget(nothin g);
		private bool SetProduce(int qty, int id, int town);
		private void Unsummon(unit unitid);
		private bool SetExpansion(unit peon, int id);
		private bool SetUpgrade(int id);
		private void SetHeroLevels(code func);
		private void SetNewHeroes(bool state);
		private void PurchaseZeppelin(nothin g);
		private bool MergeUnits(int qty, int a, int b, int make);
		private bool ConvertUnits(int qty, int id);
		private void SetCampaignAI(nothin g);
		private void SetMeleeAI(nothin g);
		private void SetTargetHeroes(bool state);
		private void SetPeonsRepair(bool state);
		private void SetRandomPaths(bool state);
		private void SetDefendPlayer(bool state);
		private void SetHeroesFlee(bool state);
		private void SetHeroesBuyItems(bool state);
		private void SetWatchMegaTargets(bool state);
		private void SetIgnoreInjured(bool state);
		private void SetHeroesTakeItems(bool state);
		private void SetUnitsFlee(bool state);
		private void SetGroupsFlee(bool state);
		private void SetSlowChopping(bool state);
		private void SetCaptainChanges(bool allow);
		private void SetSmartArtillery(bool state);
		private void SetReplacementCount(int qty);
		private void GroupTimedLife(bool allow);
		private void RemoveInjuries(nothin g);
		private void RemoveSiege(nothin g);
		private void InitAssault(nothin g);
		private bool AddAssault(int qty, int id);
		private bool AddDefenders(int qty, int id);
		private unit GetCreepCamp(int min, int max, bool flyers_ok);
		private void StartGetEnemyBase(nothin g);
		private bool WaitGetEnemyBase(nothin g);
		private unit GetEnemyBase(nothin g);
		private unit GetExpansionFoe(nothin g);
		private unit GetEnemyExpansion(nothin g);
		private int GetExpansionX(nothin g);
		private int GetExpansionY(nothin g);
		private void SetStagePoint(real x, real y);
		private void AttackMoveKill(unit target);
		private void AttackMoveXY(int x, int y);
		private void LoadZepWave(int x, int y);
		private bool SuicidePlayer(player id, bool check_full);
		private bool SuicidePlayerUnits(player id, bool check_full);
		private bool CaptainInCombat(bool attack_captain);
		private bool IsTowered(unit target);
		private void ClearHarvestAI(nothin g);
		private void HarvestGold(int town, int peons);
		private void HarvestWood(int town, int peons);
		private unit GetExpansionPeon(nothin g);
		private void StopGathering(nothin g);
		private void AddGuardPost(int id, real x, real y);
		private void FillGuardPosts(nothin g);
		private void ReturnGuardPosts(nothin g);
		private void CreateCaptains(nothin g);
		private void SetCaptainHome(int which, real x, real y);
		private void ResetCaptainLocs(nothin g);
		private void ShiftTownSpot(real x, real y);
		private void TeleportCaptain(real x, real y);
		private void ClearCaptainTargets(nothin g);
		private void CaptainAttack(real x, real y);
		private void CaptainVsUnits(player id);
		private void CaptainVsPlayer(player id);
		private void CaptainGoHome(nothin g);
		private bool CaptainIsHome(nothin g);
		private bool CaptainIsFull(nothin g);
		private bool CaptainIsEmpty(nothin g);
		private int CaptainGroupSize(nothin g);
		private int CaptainReadiness(nothin g);
		private bool CaptainRetreating(nothin g);
		private int CaptainReadinessHP(nothin g);
		private int CaptainReadinessMa(nothin g);
		private bool CaptainAtGoal(nothin g);
		private bool CreepsOnMap(nothin g);
		private void SuicideUnit(int count, int unitid);
		private void SuicideUnitEx(int ct, int uid, int pid);
		private void StartThread(code func);
		private void Sleep(real seconds);
		private bool UnitAlive(unit id);
		private bool UnitInvis(unit id);
		private int IgnoredUnits(int unitid);
		private bool TownThreatened(nothin g);
		private void DisablePathing(nothin g);
		private void SetAmphibious(nothin g);
		private int CommandsWaiting(nothin g);
		private int GetLastCommand(nothin g);
		private int GetLastData(nothin g);
		private void PopLastCommand(nothin g);
		private int MeleeDifficulty(nothin g);

	
	}
}

